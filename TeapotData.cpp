#include "Headers/TeapotData.h"

using namespace std;

TeapotData::TeapotData()
{
	points.emplace_back(0.2000f, 0.0000f, 2.70000f);
	points.emplace_back(0.2000f, -0.1120f, 2.70000f);
	points.emplace_back(0.1120f, -0.2000f, 2.70000f);
	points.emplace_back(0.0000f, -0.2000f, 2.70000f);
	points.emplace_back(1.3375f, 0.0000f, 2.53125f);
	points.emplace_back(1.3375f, -0.7490f, 2.53125f);
	points.emplace_back(0.7490f, -1.3375f, 2.53125f);
	points.emplace_back(0.0000f, -1.3375f, 2.53125f);
	points.emplace_back(1.4375f, 0.0000f, 2.53125f);
	points.emplace_back(1.4375f, -0.8050f, 2.53125f);
	points.emplace_back(0.8050f, -1.4375f, 2.53125f);
	points.emplace_back(0.0000f, -1.4375f, 2.53125f);
	points.emplace_back(1.5000f, 0.0000f, 2.40000f);
	points.emplace_back(1.5000f, -0.8400f, 2.40000f);
	points.emplace_back(0.8400f, -1.5000f, 2.40000f);
	points.emplace_back(0.0000f, -1.5000f, 2.40000f);
	points.emplace_back(1.7500f, 0.0000f, 1.87500f);
	points.emplace_back(1.7500f, -0.9800f, 1.87500f);
	points.emplace_back(0.9800f, -1.7500f, 1.87500f);
	points.emplace_back(0.0000f, -1.7500f, 1.87500f);
	points.emplace_back(2.0000f, 0.0000f, 1.35000f);
	points.emplace_back(2.0000f, -1.1200f, 1.35000f);
	points.emplace_back(1.1200f, -2.0000f, 1.35000f);
	points.emplace_back(0.0000f, -2.0000f, 1.35000f);
	points.emplace_back(2.0000f, 0.0000f, 0.90000f);
	points.emplace_back(2.0000f, -1.1200f, 0.90000f);
	points.emplace_back(1.1200f, -2.0000f, 0.90000f);
	points.emplace_back(0.0000f, -2.0000f, 0.90000f);
	points.emplace_back(-2.0000f, 0.0000f, 0.90000f);
	points.emplace_back(2.0000f, 0.0000f, 0.45000f);
	points.emplace_back(2.0000f, -1.1200f, 0.45000f);
	points.emplace_back(1.1200f, -2.0000f, 0.45000f);
	points.emplace_back(0.0000f, -2.0000f, 0.45000f);
	points.emplace_back(1.5000f, 0.0000f, 0.22500f);
	points.emplace_back(1.5000f, -0.8400f, 0.22500f);
	points.emplace_back(0.8400f, -1.5000f, 0.22500f);
	points.emplace_back(0.0000f, -1.5000f, 0.22500f);
	points.emplace_back(1.5000f, 0.0000f, 0.15000f);
	points.emplace_back(1.5000f, -0.8400f, 0.15000f);
	points.emplace_back(0.8400f, -1.5000f, 0.15000f);
	points.emplace_back(0.0000f, -1.5000f, 0.15000f);
	points.emplace_back(-1.6000f, 0.0000f, 2.02500f);
	points.emplace_back(-1.6000f, -0.3000f, 2.02500f);
	points.emplace_back(-1.5000f, -0.3000f, 2.25000f);
	points.emplace_back(-1.5000f, 0.0000f, 2.25000f);
	points.emplace_back(-2.3000f, 0.0000f, 2.02500f);
	points.emplace_back(-2.3000f, -0.3000f, 2.02500f);
	points.emplace_back(-2.5000f, -0.3000f, 2.25000f);
	points.emplace_back(-2.5000f, 0.0000f, 2.25000f);
	points.emplace_back(-2.7000f, 0.0000f, 2.02500f);
	points.emplace_back(-2.7000f, -0.3000f, 2.02500f);
	points.emplace_back(-3.0000f, -0.3000f, 2.25000f);
	points.emplace_back(-3.0000f, 0.0000f, 2.25000f);
	points.emplace_back(-2.7000f, 0.0000f, 1.80000f);
	points.emplace_back(-2.7000f, -0.3000f, 1.80000f);
	points.emplace_back(-3.0000f, -0.3000f, 1.80000f);
	points.emplace_back(-3.0000f, 0.0000f, 1.80000f);
	points.emplace_back(-2.7000f, 0.0000f, 1.57500f);
	points.emplace_back(-2.7000f, -0.3000f, 1.57500f);
	points.emplace_back(-3.0000f, -0.3000f, 1.35000f);
	points.emplace_back(-3.0000f, 0.0000f, 1.35000f);
	points.emplace_back(-2.5000f, 0.0000f, 1.12500f);
	points.emplace_back(-2.5000f, -0.3000f, 1.12500f);
	points.emplace_back(-2.6500f, -0.3000f, 0.93750f);
	points.emplace_back(-2.6500f, 0.0000f, 0.93750f);
	points.emplace_back(-2.0000f, -0.3000f, 0.90000f);
	points.emplace_back(-1.9000f, -0.3000f, 0.60000f);
	points.emplace_back(-1.9000f, 0.0000f, 0.60000f);
	points.emplace_back(1.7000f, 0.0000f, 1.42500f);
	points.emplace_back(1.7000f, -0.6600f, 1.42500f);
	points.emplace_back(1.7000f, -0.6600f, 0.60000f);
	points.emplace_back(1.7000f, 0.0000f, 0.60000f);
	points.emplace_back(2.6000f, 0.0000f, 1.42500f);
	points.emplace_back(2.6000f, -0.6600f, 1.42500f);
	points.emplace_back(3.1000f, -0.6600f, 0.82500f);
	points.emplace_back(3.1000f, 0.0000f, 0.82500f);
	points.emplace_back(2.3000f, 0.0000f, 2.10000f);
	points.emplace_back(2.3000f, -0.2500f, 2.10000f);
	points.emplace_back(2.4000f, -0.2500f, 2.02500f);
	points.emplace_back(2.4000f, 0.0000f, 2.02500f);
	points.emplace_back(2.7000f, 0.0000f, 2.40000f);
	points.emplace_back(2.7000f, -0.2500f, 2.40000f);
	points.emplace_back(3.3000f, -0.2500f, 2.40000f);
	points.emplace_back(3.3000f, 0.0000f, 2.40000f);
	points.emplace_back(2.8000f, 0.0000f, 2.47500f);
	points.emplace_back(2.8000f, -0.2500f, 2.47500f);
	points.emplace_back(3.5250f, -0.2500f, 2.49375f);
	points.emplace_back(3.5250f, 0.0000f, 2.49375f);
	points.emplace_back(2.9000f, 0.0000f, 2.47500f);
	points.emplace_back(2.9000f, -0.1500f, 2.47500f);
	points.emplace_back(3.4500f, -0.1500f, 2.51250f);
	points.emplace_back(3.4500f, 0.0000f, 2.51250f);
	points.emplace_back(2.8000f, 0.0000f, 2.40000f);
	points.emplace_back(2.8000f, -0.1500f, 2.40000f);
	points.emplace_back(3.2000f, -0.1500f, 2.40000f);
	points.emplace_back(3.2000f, 0.0000f, 2.40000f);
	points.emplace_back(0.0000f, 0.0000f, 3.15000f);
	points.emplace_back(0.8000f, 0.0000f, 3.15000f);
	points.emplace_back(0.8000f, -0.4500f, 3.15000f);
	points.emplace_back(0.4500f, -0.8000f, 3.15000f);
	points.emplace_back(0.0000f, -0.8000f, 3.15000f);
	points.emplace_back(0.0000f, 0.0000f, 2.85000f);
	points.emplace_back(1.4000f, 0.0000f, 2.40000f);
	points.emplace_back(1.4000f, -0.7840f, 2.40000f);
	points.emplace_back(0.7840f, -1.4000f, 2.40000f);
	points.emplace_back(0.0000f, -1.4000f, 2.40000f);
	points.emplace_back(0.4000f, 0.0000f, 2.55000f);
	points.emplace_back(0.4000f, -0.2240f, 2.55000f);
	points.emplace_back(0.2240f, -0.4000f, 2.55000f);
	points.emplace_back(0.0000f, -0.4000f, 2.55000f);
	points.emplace_back(1.3000f, 0.0000f, 2.55000f);
	points.emplace_back(1.3000f, -0.7280f, 2.55000f);
	points.emplace_back(0.7280f, -1.3000f, 2.55000f);
	points.emplace_back(0.0000f, -1.3000f, 2.55000f);
	points.emplace_back(1.3000f, 0.0000f, 2.40000f);
	points.emplace_back(1.3000f, -0.7280f, 2.40000f);
	points.emplace_back(0.7280f, -1.3000f, 2.40000f);
	points.emplace_back(0.0000f, -1.3000f, 2.40000f);

	patches.push_back({ 102, 103, 104, 105, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 });
	patches.push_back({ 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 });
	patches.push_back({ 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40 });
	patches.push_back({ 96, 96, 96, 96, 97, 98, 99, 100, 101, 101, 101, 101, 0, 1, 2, 3 });
	patches.push_back({ 0, 1, 2, 3, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117 });
	patches.push_back({ 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56 });
	patches.push_back({ 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 28, 65, 66, 67 });
	patches.push_back({ 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83 });
	patches.push_back({ 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95 });
}